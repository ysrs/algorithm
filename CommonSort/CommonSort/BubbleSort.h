#ifndef _BUBBLE_SORT_H_
#define _BUBBLE_SORT_H_

/*
*冒泡排序是一种极其简单的排序算法，其原理如下：
*1. 比较相邻的元素，如果前一个比后一个大，就把它们两个调换一下位置。
*2. 对每一对相邻的元素做同样的操作，从开始的第一对到最后的一对。这一步完成后，最后的元素就是最大的。
*3. 针对所有的元素重复上一步，除了最后一个元素。
*4. 持续每次对越来越少的元素做上面的步骤，直到没有任何一对数字需要比较。
*
* 分类：  属于内部比较排序
* 稳定性：稳定排序
*/

// 从小到大进行排序
// 普通的冒泡排序算法
// 分类 -------------- 内部比较排序
// 数据结构 ---------- 数组
// 最差时间复杂度 ---- O(n^2)
// 最优时间复杂度 ---- 如果能在内部循环第一次运行时,使用一个旗标来表示有无需要交换的可能,可以把最优时间复杂度降低到O(n)
// 平均时间复杂度 ---- O(n^2)
// 所需辅助空间 ------ O(1)
// 稳定性 ------------ 稳定
void BubbleSort(int iArray[], int iLength);

#endif // _BUBBLE_SORT_H_



